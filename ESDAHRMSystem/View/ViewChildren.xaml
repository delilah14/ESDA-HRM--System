<UserControl x:Class="ESDAHRMSystem.View.ViewChildren"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ESDAHRMSystem.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             Background="White" Name="ChildrenView" Loaded="ChildrenView_Loaded"
             >
    <StackPanel Orientation="Vertical" x:Name="EmployeeStackPanel"
                
                >
        <materialDesign:Card
  Background="{DynamicResource PrimaryHueDarkBrush}"
  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}"
  
  Padding="8"
  UniformCornerRadius="6">
            <StackPanel Orientation="Horizontal">
               
                <ComboBox
  materialDesign:HintAssist.Hint="Search by gender"
                
  
  Style="{StaticResource MaterialDesignFloatingHintComboBox}" Loaded="ComboBox_Loaded" x:Name="FirstNameCombo" Margin="0,0,10,0">

                </ComboBox>
                <ComboBox x:Name="MiddleNameCombo"
  materialDesign:HintAssist.Hint="Search by house"
 
  Style="{StaticResource MaterialDesignFloatingHintComboBox}" Loaded="MiddleNameCombo_Loaded">

                </ComboBox>
               

             
                <Button x:Name="applyButton"
    Style="{StaticResource MaterialDesignRaisedButton}"
    Width="100"
    ToolTip="Resource name: MaterialDesignRaisedButton" Click="Button_Click">
                    Apply
                </Button>
            </StackPanel>
        </materialDesign:Card>

        <DataGrid x:Name="EmployeeData" 
  Margin="0 8 0 0"
  ItemsSource="{Binding}"
  CanUserSortColumns="True"
  
  AutoGenerateColumns="False"
  materialDesign:DataGridAssist.CellPadding="13 8 8 8"
  materialDesign:DataGridAssist.ColumnHeaderPadding="8" Loaded="EmployeeData_Loaded" SelectionChanged="EmployeeData_SelectionChanged" MouseDoubleClick="EmployeeData_MouseDoubleClick" CurrentCellChanged="EmployeeData_CurrentCellChanged">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn
      Binding="{Binding IsSelected}"
      ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
      EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.Header>
                        <!--padding to allow hit test to pass thru for sorting -->
                        <Border
          Background="Transparent"
          Padding="6 0 6 0"
          HorizontalAlignment="Center">
                            <CheckBox
            HorizontalAlignment="Center"
            DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
            IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>
                <DataGridTextColumn
      Binding="{Binding FirstName}"
      Header="First name" x:Name="Fname"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding MiddleName}"
      Header="Middle name"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <!-- set a max length to get an indicator in the editor -->
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding LastName}"
      Header="Last name"
      MaxLength="255"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding House}"
      Header="Job"
      MaxLength="255"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding Gender}"
      Header="Gender"
      MaxLength="255"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                <materialDesign:MaterialDataGridTextColumn
      Binding="{Binding DOB}"
      Header="Birth date"
      Width="120"
      EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">

                    <DataGridTextColumn.HeaderStyle>
                        <Style
          TargetType="{x:Type DataGridColumnHeader}"
          BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                            <Setter
            Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock
                  TextWrapping="Wrap"
                  Text="{Binding}"
                  TextAlignment="Right" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style
          TargetType="{x:Type TextBlock}">
                            <Setter
            Property="HorizontalAlignment"
            Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    
                </materialDesign:MaterialDataGridTextColumn>
               
                <DataGridTemplateColumn Header="Delete rows">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Delete" Name="deleteButton" Click="DeleteButton_Click_1" ></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>



                <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
            </DataGrid.Columns>
        </DataGrid>
    </StackPanel>
</UserControl>
